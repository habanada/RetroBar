<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="clr-namespace:RetroBar.Controls"
        xmlns:converters="clr-namespace:RetroBar.Converters"
        xmlns:Settings="clr-namespace:RetroBar.Utilities"
        xmlns:av="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="av" x:Class="RetroBar.PropertiesWindow"
        Title="{DynamicResource retrobar_properties}"
        Icon="Resources/retrobar.ico"
        Height="Auto"
        Width="Auto"
        MinWidth="413"
        ResizeMode="NoResize"
        SizeToContent="WidthAndHeight"
        FlowDirection="{DynamicResource flow_direction}"
        Style="{DynamicResource PropertiesWindow}"
        Closing="PropertiesWindow_OnClosing"
        Loaded="PropertiesWindow_OnLoaded"
        ContentRendered="PropertiesWindow_OnContentRendered">
    <Window.Resources>
        <ResourceDictionary>
            <converters:BoolToTextRenderingModeConverter x:Key="textRenderingModeConverter" />
            <converters:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
            <converters:BoolToInvertedVisibilityConverter x:Key="boolToInvertedVisibilityConverter" />
            <converters:CountToIndexConverter x:Key="countToIndexConverter" />
            <converters:DoubleToPercentConverter x:Key="doubleToPercentConverter" />
            <converters:EnumConverter x:Key="enumConverter" />
            <converters:EdgeOrientationVisibilityConverter x:Key="edgeOrientationVisibilityConverter" />
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="VerticalAlignment"
                        Value="Center" />
                <Setter Property="MinWidth"
                        Value="60" />
            </Style>
            <Style TargetType="{x:Type ComboBox}">
                <Setter Property="HorizontalAlignment"
                        Value="Right" />
                <Setter Property="IsDropDownOpen"
                        Value="False" />
                <Setter Property="IsEditable"
                        Value="False" />
                <Setter Property="Margin"
                        Value="0,5" />
                <Setter Property="Padding"
                        Value="4" />
                <Setter Property="Width"
                        Value="200" />
            </Style>
            <Style TargetType="{x:Type CheckBox}">
                <Style.Resources>
                    <Style TargetType="{x:Type Path}" BasedOn="{StaticResource DefaultDirection}" />
                </Style.Resources>
                <Setter Property="Margin"
                        Value="0,5,5,5" />
                <Setter Property="Padding"
                        Value="0" />
            </Style>
            <Style TargetType="{x:Type GroupBox}">
                <Setter Property="Padding"
                        Value="5,5,5,0" />
            </Style>
            <Style TargetType="{x:Type Label}">
                <Setter Property="Padding"
                        Value="0,2,0,0" />
            </Style>
            <Style TargetType="{x:Type Button}">
                <Setter Property="MinHeight"
                        Value="21" />
                <Setter Property="MinWidth"
                        Value="73" />
                <Setter Property="Padding"
                        Value="10,0" />
                <Setter Property="VerticalAlignment"
                        Value="Center" />
            </Style>
            <Style TargetType="{x:Type Slider}">
                <Setter Property="Margin"
                        Value="4,2" />
            </Style>
            <Style x:Key="PreviewBorder"
                   TargetType="{x:Type Border}">
                <Setter Property="Background"
                        Value="#99000000" />
                <Setter Property="BorderBrush"
                        Value="#99000000" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="Margin"
                        Value="0,0,0,5" />
                <Setter Property="Width"
                        Value="335" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Margin="7">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <TabControl Grid.Row="0">
            <TabItem Header="{DynamicResource taskbar_tab}">
                <StackPanel Orientation="Vertical"
                            Margin="10">
                    <GroupBox Header="{DynamicResource taskbar_appearance}">
                        <StackPanel Orientation="Vertical">
                            <Border Style="{StaticResource PreviewBorder}">
                                <ContentControl x:Name="TaskbarAppearancePreviewControl"
                                                IsHitTestVisible="False"
                                                Focusable="False"
                                                ClipToBounds="True"
                                                Style="{DynamicResource Taskbar}" TextOptions.TextRenderingMode="{Binding AllowFontSmoothing, Converter={StaticResource textRenderingModeConverter}, Source={x:Static Settings:Settings.Instance}}">
                                    <DockPanel>
                                        <ToggleButton Style="{DynamicResource StartButton}"
                                                      Focusable="False"
                                                      DockPanel.Dock="Left">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <Image Grid.Column="0"
                                                       Style="{DynamicResource StartIcon}" />
                                                <TextBlock Grid.Column="1"
                                                           Style="{DynamicResource StartLabel}" />
                                            </Grid>
                                        </ToggleButton>
                                        <StackPanel Orientation="Horizontal"
                                                    Visibility="{Binding ShowQuickLaunch, Converter={StaticResource boolToVisibilityConverter}, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}">
                                            <Thumb Style="{DynamicResource ToolbarThumb}"
                                                   DockPanel.Dock="Left"
                                                   Visibility="{Binding LockTaskbar, Converter={StaticResource boolToInvertedVisibilityConverter}, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}" />
                                            <ItemsControl DockPanel.Dock="Left"
                                                          Focusable="False"
                                                          Style="{DynamicResource ToolbarItems}">
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel Orientation="Horizontal"/>
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                                <Button Style="{DynamicResource ToolbarButton}"
                                                        Focusable="False">
                                                    <Image Source="Resources\retrobar.ico"
                                                           Style="{DynamicResource ToolbarIcon}" />
                                                </Button>
                                            </ItemsControl>
                                        </StackPanel>
                                        <Thumb Style="{DynamicResource ToolbarThumb}"
                                               DockPanel.Dock="Left"
                                               Visibility="{Binding LockTaskbar, Converter={StaticResource boolToInvertedVisibilityConverter}, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}" />
                                        <ScrollViewer Style="{DynamicResource TaskListScrollViewer}"
                                                      Focusable="False"
                                                      VerticalScrollBarVisibility="Hidden">
                                            <Button Focusable="False"
                                                    HorizontalAlignment="Left"
                                                    Width="{DynamicResource TaskButtonWidth}"
                                                    Style="{DynamicResource TaskButton}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <Image Source="Resources\retrobar.ico"
                                                           Grid.Column="0"
                                                           Style="{DynamicResource TaskIcon}" />
                                                    <TextBlock Text="RetroBar"
                                                               Grid.Column="1"
                                                               Style="{DynamicResource TaskLabel}" />
                                                </Grid>
                                            </Button>
                                        </ScrollViewer>
                                    </DockPanel>
                                </ContentControl>
                            </Border>
                            <DockPanel>
                                <Label VerticalAlignment="Center"
                                       Target="{Binding ElementName=cboLanguageSelect}">
                                    <AccessText Text="{DynamicResource language_text}"
                                                ToolTip="{DynamicResource language_tip}" />
                                </Label>
                                <ComboBox x:Name="cboLanguageSelect"
                                          SelectedValue="{Binding Language, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}" />
                            </DockPanel>
                            <DockPanel>
                                <Label VerticalAlignment="Center"
                                       Target="{Binding ElementName=cboThemeSelect}">
                                    <AccessText Text="{DynamicResource theme_text}"
                                                ToolTip="{DynamicResource theme_tip}" />
                                </Label>
                                <ComboBox x:Name="cboThemeSelect"
                                          SelectedValue="{Binding Theme, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}" />
                            </DockPanel>
                            <DockPanel>
                                <Label VerticalAlignment="Center"
                                       Target="{Binding ElementName=cboEdgeSelect}">
                                    <AccessText Text="{DynamicResource location_text}"
                                                ToolTip="{DynamicResource location_tip}" />
                                </Label>
                                <ComboBox x:Name="cboEdgeSelect"
                                          ItemsSource="{DynamicResource location_values}"
                                          SelectedIndex="{Binding Edge, Converter={StaticResource enumConverter}, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}"
                                          SelectionChanged="CboEdgeSelect_SelectionChanged" />
                            </DockPanel>
                            <DockPanel Visibility="{Binding Edge, Converter={StaticResource edgeOrientationVisibilityConverter}, ConverterParameter=horizontal, Source={x:Static Settings:Settings.Instance}}">
                                <Label VerticalAlignment="Center"
                                       Target="{Binding ElementName=cboRowCount}">
                                    <AccessText Text="{DynamicResource rowcount_text}"
                                                ToolTip="{DynamicResource rowcount_tip}" />
                                </Label>
                                <ComboBox x:Name="cboRowCount"
                                          SelectedIndex="{Binding RowCount, Converter={StaticResource countToIndexConverter}, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}"
                                          SelectionChanged="CboRowCount_SelectionChanged" />
                            </DockPanel>
                            <DockPanel Visibility="{Binding Edge, Converter={StaticResource edgeOrientationVisibilityConverter}, ConverterParameter=vertical, Source={x:Static Settings:Settings.Instance}}">
                                <Label VerticalAlignment="Center"
                                       Target="{Binding ElementName=sldTaskbarWidth}">
                                    <AccessText Text="{DynamicResource taskbar_width}" />
                                </Label>
                                <Slider x:Name="sldTaskbarWidth"
                                        Orientation="Horizontal"
                                        IsSnapToTickEnabled="True"
                                        Value="{Binding TaskbarWidth, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}"
                                        Minimum="1"
                                        TickFrequency="1"
                                        TickPlacement="BottomRight"
                                        HorizontalAlignment="Right"
                                        Margin="0,3,0,4"
                                        Width="200" />
                            </DockPanel>
                            <CheckBox IsChecked="{Binding AllowFontSmoothing, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}">
                                <Label Content="{DynamicResource allow_font_smoothing}" />
                            </CheckBox>
                            <CheckBox IsChecked="{Binding LockTaskbar, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}">
                                <Label Content="{DynamicResource lock_taskbar}" />
                            </CheckBox>
                            <CheckBox IsChecked="{Binding AutoHide, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}">
                                <Label Content="{DynamicResource enable_auto_hide}" />
                            </CheckBox>
                            <CheckBox x:Name="cbShowBadges"
                                      IsChecked="{Binding ShowTaskBadges, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}">
                                <Label Content="{DynamicResource show_badges}" />
                            </CheckBox>
                            <DockPanel>
                                <CheckBox x:Name="cbShowQuickLaunch"
                                          IsChecked="{Binding ShowQuickLaunch, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}">
                                    <Label Content="{DynamicResource show_quick_launch}" />
                                </CheckBox>
                                <Button HorizontalAlignment="Right"
                                        Content="{DynamicResource select_location}"
                                        Click="SetQuickLaunchLocation_OnClick" />
                            </DockPanel>
                            <CheckBox x:Name="cbShowWindowPreviews"
                                      IsChecked="{Binding ShowTaskThumbnails, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}">
                                <Label Content="{DynamicResource show_window_previews}" />
                            </CheckBox>
                            <CheckBox x:Name="cbSlideTaskbarButtons"
                                      IsChecked="{Binding SlideTaskbarButtons, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}"
                                      Visibility="{Binding Edge, Converter={StaticResource edgeOrientationVisibilityConverter}, ConverterParameter=horizontal, Source={x:Static Settings:Settings.Instance}}">
                                <Label Content="{DynamicResource slide_taskbar_buttons}" />
                            </CheckBox>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="{DynamicResource notification_area}" Height="205">
                        <StackPanel Orientation="Vertical">
                            <Border Style="{StaticResource PreviewBorder}">
                                <ContentControl x:Name="NotificationAreaPreviewControl"
                                                IsHitTestVisible="False"
                                                Focusable="False"
                                                ClipToBounds="True"
                                                Style="{DynamicResource Taskbar}" TextOptions.TextRenderingMode="{Binding AllowFontSmoothing, Converter={StaticResource textRenderingModeConverter}, Source={x:Static Settings:Settings.Instance}}">
                                    <DockPanel>
                                        <controls:ShowDesktopButton DockPanel.Dock="Right" Visibility="{Binding ShowDesktopButton, Converter={StaticResource boolToVisibilityConverter}, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}" />
                                        <GroupBox Style="{DynamicResource Tray}"
                                                  DockPanel.Dock="Right">
                                            <StackPanel Orientation="Horizontal">
                                                <StackPanel Orientation="Horizontal">
                                                    <ToggleButton x:Name="NotifyIconToggleButton"
                                                                  Focusable="False"
                                                                  Visibility="{Binding CollapseNotifyIcons, Converter={StaticResource boolToVisibilityConverter}, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}"
                                                                  Style="{DynamicResource TrayToggleButton}"/>
                                                    <ItemsControl Focusable="False"
                                                                  HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center">
                                                        <ItemsControl.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <WrapPanel Orientation="Horizontal"/>
                                                            </ItemsPanelTemplate>
                                                        </ItemsControl.ItemsPanel>
                                                        <Border>
                                                            <Image Source="Resources\retrobar.ico"
                                                                   Style="{DynamicResource NotifyIcon}" />
                                                        </Border>
                                                    </ItemsControl>
                                                </StackPanel>
                                                <controls:Clock VerticalAlignment="Center" />
                                            </StackPanel>
                                        </GroupBox>
                                        <controls:InputLanguage VerticalAlignment="Stretch" DockPanel.Dock="Right" />
                                        <StackPanel/>
                                    </DockPanel>
                                </ContentControl>
                            </Border>
                            <CheckBox x:Name="cbShowClock"
                                      IsChecked="{Binding ShowClock, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}">
                                <Label Content="{DynamicResource show_clock}" />
                            </CheckBox>
                            <CheckBox x:Name="cbShowClockSeconds"
                                      IsChecked="{Binding ShowClockSeconds, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}">
                                <Label Content="{DynamicResource show_clock_seconds}" />
                            </CheckBox>
                            <CheckBox x:Name="cbShowInputLanguage"
                                      IsChecked="{Binding ShowInputLanguage, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}">
                                <Label Content="{DynamicResource show_input_language}" />
                            </CheckBox>
                            <CheckBox x:Name="cbShowDesktopButton"
                                      IsChecked="{Binding ShowDesktopButton, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}">
                                <Label Content="{DynamicResource add_show_desktop_button}" />
                            </CheckBox>
                            <DockPanel>
                                <CheckBox x:Name="cbCollapseTrayIcons"
                                          IsChecked="{Binding CollapseNotifyIcons, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}">
                                    <Label Content="{DynamicResource collapse_tray_icons}" />
                                </CheckBox>
                                <Button HorizontalAlignment="Right"
                                        Content="{DynamicResource customize}"
                                        IsEnabled="{Binding CollapseNotifyIcons, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}"
                                        Click="CustomizeNotifications_OnClick" />
                            </DockPanel>
                            <CheckBox x:Name="cbUseClassicShell"
          IsChecked="{Binding UseClassicShell, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}">
                                <Label Content="Use Classic Shell" />
                            </CheckBox>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </TabItem>
            <TabItem Header="{DynamicResource advanced_tab}">
                <StackPanel Orientation="Vertical"
                            Margin="10">
                    <StackPanel Orientation="Vertical"
                                Margin="0,0,0,10">
                        <CheckBox x:Name="cbAutoStart"
                                  Checked="CbAutoStart_OnChecked"
                                  Unchecked="CbAutoStart_OnChecked">
                            <Label Content="{DynamicResource autostart}" />
                        </CheckBox>
                        <CheckBox x:Name="cbUseSoftwareRendering"
                                  IsChecked="{Binding UseSoftwareRendering, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}">
                            <Label Content="{DynamicResource use_software_rendering}" />
                        </CheckBox>
                        <CheckBox x:Name="cbDebugLogging"
                                  IsChecked="{Binding DebugLogging, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}">
                            <Label Content="{DynamicResource debug_logging}" />
                        </CheckBox>
                        <CheckBox x:Name="cbCheckForUpdates"
                                  IsChecked="{Binding CheckForUpdates, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}">
                            <Label Content="{DynamicResource check_for_updates}" />
                        </CheckBox>
                        <CheckBox x:Name="cbAutoHideTransparent"
                                  IsChecked="{Binding AutoHideTransparent, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}">
                            <Label Content="{DynamicResource auto_hide_transparent}" />
                        </CheckBox>
                        <CheckBox x:Name="cbShowExitMenuItem"
                                  IsChecked="{Binding ShowExitMenuItem, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}">
                            <Label Content="{DynamicResource show_exit_menu_item}" />
                        </CheckBox>
                        <DockPanel>
                            <Label VerticalAlignment="Center"
                                   Target="{Binding ElementName=cboWinNumHotkeysAction}">
                                <AccessText Text="{DynamicResource win_num_hotkeys_action}" />
                            </Label>
                            <ComboBox x:Name="cboWinNumHotkeysAction"
                                      ItemsSource="{DynamicResource win_num_hotkeys_action_values}"
                                      SelectedIndex="{Binding WinNumHotkeysAction, Converter={StaticResource enumConverter}, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}"
                                      SelectionChanged="CboWinNumHotkeysAction_SelectionChanged" />
                        </DockPanel>
                        <DockPanel>
                            <Label VerticalAlignment="Center"
                                   Target="{Binding ElementName=cboMiddleMouseAction}">
                                <AccessText Text="{DynamicResource middle_mouse_task_action}" />
                            </Label>
                            <ComboBox x:Name="cboMiddleMouseAction"
                                      ItemsSource="{DynamicResource middle_mouse_task_action_values}"
                                      SelectedIndex="{Binding TaskMiddleClickAction, Converter={StaticResource enumConverter}, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}"
                                      SelectionChanged="CboMiddleMouseAction_SelectionChanged" />
                        </DockPanel>
                        <DockPanel>
                            <Label VerticalAlignment="Center"
                                   Target="{Binding ElementName=cboClockAction}">
                                <AccessText Text="{DynamicResource clock_click_action}" />
                            </Label>
                            <ComboBox x:Name="cboClockAction"
                                      ItemsSource="{DynamicResource clock_click_action_values}"
                                      SelectedIndex="{Binding ClockClickAction, Converter={StaticResource enumConverter}, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}"
                                      SelectionChanged="CboClockAction_SelectionChanged" />
                        </DockPanel>
                        <DockPanel>
                            <Label VerticalAlignment="Center"
                                   Target="{Binding ElementName=cboInvertIconsMode}">
                                <AccessText Text="{DynamicResource invert_system_icons}" />
                            </Label>
                            <ComboBox x:Name="cboInvertIconsMode"
                                      ItemsSource="{DynamicResource invert_system_icons_values}"
                                      SelectedIndex="{Binding InvertIconsMode, Converter={StaticResource enumConverter}, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}"
                                      SelectionChanged="CboInvertIconsMode_SelectionChanged" />
                        </DockPanel>
                        <Button HorizontalAlignment="Right"
                                Content="{DynamicResource customize}"
                                Click="CustomizeNotifications_OnClick" />
                    </StackPanel>
                    <GroupBox Header="{DynamicResource multiple_displays}"
                              Margin="0,0,0,10">
                        <StackPanel Orientation="Vertical">
                            <CheckBox x:Name="cbShowMultiMon"
                                      IsChecked="{Binding ShowMultiMon, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}">
                                <Label Content="{DynamicResource show_multi_mon}" />
                            </CheckBox>
                            <CheckBox x:Name="cbShowStartButtonMultiMon"
                                      IsEnabled="{Binding ShowMultiMon, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding ShowStartButtonMultiMon, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}">
                                <Label Content="{DynamicResource show_start_button_multi_mon}" />
                            </CheckBox>
                            <DockPanel>
                                <Label VerticalAlignment="Center"
                                       Target="{Binding ElementName=cboMultiMonMode}">
                                    <AccessText Text="{DynamicResource show_tasks_on}" />
                                </Label>
                                <ComboBox x:Name="cboMultiMonMode"
                                          IsEnabled="{Binding ShowMultiMon, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}"
                                          ItemsSource="{DynamicResource show_tasks_on_values}"
                                          SelectedIndex="{Binding MultiMonMode, Converter={StaticResource enumConverter}, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}"
                                          SelectionChanged="CboMultiMonMode_SelectionChanged" />
                            </DockPanel>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="{DynamicResource taskbar_scale}">
                        <StackPanel Orientation="Vertical">
                            <DockPanel Margin="20,0">
                                <Label DockPanel.Dock="Left" Content="{DynamicResource taskbar_scale_1x}" />
                                <Label DockPanel.Dock="Right" Content="{DynamicResource taskbar_scale_2x}" />
                                <Slider x:Name="sldTaskbarScale"
                                        Orientation="Horizontal"
                                        IsSnapToTickEnabled="True"
                                        Value="{Binding TaskbarScale, Source={x:Static Settings:Settings.Instance}, UpdateSourceTrigger=PropertyChanged}"
                                        Minimum="1"
                                        Maximum="2"
                                        TickFrequency="0.05"
                                        TickPlacement="BottomRight" />
                            </DockPanel>
                            <TextBlock x:Name="txtCurrentScale"
                                       HorizontalAlignment="Center">
                                <TextBlock.Text>
                                    <MultiBinding Converter="{StaticResource doubleToPercentConverter}" UpdateSourceTrigger="PropertyChanged">
                                        <Binding Source="{x:Static Settings:Settings.Instance}" Path="TaskbarScale"/>
                                        <Binding Source="{x:Static Settings:Settings.Instance}" Path="Language"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </StackPanel>
                    </GroupBox>
                    <TextBlock Margin="0,10,0,0"
                               TextAlignment="Right"><Hyperlink Click="OpenCustomThemesFolder_OnClick"><Run Text="{DynamicResource open_custom_themes_folder}" /></Hyperlink></TextBlock>
                    <DockPanel Margin="0,10,0,0">
                        <TextBlock x:Name="txtVersion"
                                   DockPanel.Dock="Left"
                                   Margin="0,0,10,0" />
                        <TextBlock DockPanel.Dock="Right"
                                   TextAlignment="Right"><Hyperlink NavigateUri="https://github.com/dremin/RetroBar"
                                           RequestNavigate="Hyperlink_RequestNavigate"><Run Text="{DynamicResource visit_on_github}" /></Hyperlink></TextBlock>
                    </DockPanel>
                </StackPanel>
            </TabItem>
        </TabControl>
        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    Grid.Row="1"
                    Margin="0,7,0,0">
            <Button Content="{DynamicResource ok_dialog}"
                    Click="OK_OnClick" />
        </StackPanel>
    </Grid>
</Window>